{"version":3,"file":"main.985d4f9464d93110af81.bundle.js","sources":["webpack:///./src/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ResizeObserver extends Component {\n\n  static propTypes = {\n    tag: PropTypes.string,\n    onResize: PropTypes.func\n  }\n\n  static defaultProps = {\n    tag: 'div'\n  }\n\n  size = {\n    width: 0,\n    height: 0\n  }\n\n  mounted = false\n\n  monitorHeight = () => {\n    const { container } = this\n    const { onResize } = this.props\n    const { width, height } = this.size\n    if (container) {\n      const { clientWidth, clientHeight } = container\n      if (clientWidth !== width || clientHeight !== height) {\n        this.size = {\n          width: clientWidth,\n          height: clientHeight\n        }\n        onResize && onResize(this.size)\n      }\n    }\n    if (this.mounted) requestAnimationFrame(this.monitorHeight)\n  }\n\n  componentDidMount () {\n    this.mounted = true\n    requestAnimationFrame(this.monitorHeight)\n  }\n\n  componentWillUnmount () {\n    this.mounted = false\n  }\n\n  render () {\n    const { tag: Tag, children, onResize, ...props } = this.props\n    return (\n      <Tag {...props} ref={ref => this.container = ref}>\n        {children}\n      </Tag>\n    )\n  }\n\n}\n"],"mappings":"AAGA","sourceRoot":""}